{"version":3,"file":"fcl.module.js","sources":["../src/default-config.js","../src/temp.js","../src/serialize/index.js","../src/transaction/index.js","../src/events/index.js","../src/current-user/normalize/__vsn.js","../src/current-user/normalize/frame.js","../src/current-user/normalize/back-channel-rpc.js","../src/current-user/normalize/service.js","../src/current-user/normalize/pre-authz.js","../src/current-user/normalize/authz.js","../src/current-user/normalize/authn.js","../src/current-user/normalize/open-id.js","../src/current-user/build-user.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/current-user/normalize/polling-response.js","../src/current-user/normalize/composite-signature.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/index.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/index.js","../src/current-user/fetch-services.js","../src/current-user/merge-services.js","../src/fcl.js"],"sourcesContent":["import {config} from \"@onflow/config\"\n\nconfig()\n  .put(\"accessNode.api\", \"http://localhost:8080\")\n  .put(\"challenge.handshake\", \"http://localhost:8700/authenticate\")\n","import {config} from \"@onflow/config\"\nimport {resolve} from \"@onflow/sdk\"\n\nconfig().put(\"sdk.resolve\", resolve)\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  // prettier-ignore\n  const resolveFunction = await config()\n    .get(\"sdk.resolve\", opts.resolve || defaultResolve(opts))\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n  return JSON.stringify(await resolveFunction(args), null, 2)\n}\n","import \"../default-config\"\nimport {config} from \"@onflow/config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend} from \"@onflow/sdk\"\nimport {decode} from \"@onflow/sdk\"\nimport {getTransactionStatus} from \"@onflow/sdk\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async (transactionId) => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = (tx) => tx.status === 5\nconst isSealed = (tx) => tx.status >= 4\nconst isExecuted = (tx) => tx.status >= 3\nconst isFinalized = (tx) => tx.status >= 2\nconst isPending = (tx) => tx.status >= 1\nconst isUnknown = (tx) => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async (ctx) => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    ctx.merge(tx)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async (ctx) => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = (transactionId) => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = (transactionId) => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe((txStatus) => {\n          if (txStatus.statusCode && !suppress) {\n            reject(txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {config} from \"@onflow/config\"\nimport {latestBlock} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nimport {send} from \"@onflow/sdk\"\nimport {decode} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(\"hwm\")\n    if (hwm == null) {\n      ctx.put(\"hwm\", await latestBlock())\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    } else {\n      let next = await latestBlock()\n      ctx.put(\"hwm\", next)\n      const data = await send([\n        getEvents(ctx.self(), hwm.height, next.height - 1),\n      ]).then(decode)\n      for (let d of data) ctx.broadcast(UPDATED, d.data)\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(\"tick\"))\n      ctx.delete(\"tick\")\n      ctx.delete(\"hwm\")\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGME = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGME = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\n\nexport function normalizeServices(services, data) {\n  return services.map(service => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    // console.log(service.type, {normalized, service})\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"./normalize/__vsn\"\nimport {normalizeService} from \"./normalize/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.exp,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then((d) => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status,\n        reason: resp.reason,\n        data: resp.compositeSignature || resp.data || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100vh;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame, unmount]\n}\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:FRAME:CLOSE\"\nconst READY_EVENT = \"FCL:FRAME:READY\"\nconst RESPONSE_EVENT = \"FCL:FRAME:RESPONSE\"\nconst OPEN_EVENT = \"FCL:FRAME:OPEN\"\n\nconst noop = () => {}\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  var tab = null\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      // if (e.data.type == null) return\n      if (IGNORE.has(e.data.type)) return\n      if (e.data.type === CLOSE_EVENT) close()\n      if (e.data.type === READY_EVENT) onReady(e, {send, close})\n      if (e.data.type === RESPONSE_EVENT) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (e.data.type === \"FCL::CHALLENGE::RESPONSE\") {\n        onResponse(e, {send, close})\n      }\n      if (e.data.type === \"FCL::AUTHZ_READY\") onReady(e, {send, close})\n      if (e.data.type === \"FCL::CHALLENGE::CANCEL\") close()\n      if (e.data.type === \"FCL::CANCEL\") close()\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      if (tab != null) tab.close()\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      // console.log(\"SEND\", msg)\n      $frame.contentWindow.postMessage(\n        JSON.parse(JSON.stringify(msg || {})),\n        \"*\"\n      )\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n\n  function open(msg) {\n    try {\n      tab = window.open(msg.endpoint)\n      tab.focus()\n    } catch (error) {\n      console.error(\"Frame Open Error\", msg, error)\n    }\n  }\n}\n","import {normalizePollingResponse} from \"../../../normalize/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {serviceEndpoint} from \"./utils/service-endpoint\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeCompositeSignature} from \"../../normalize/composite-signature\"\nimport {frame} from \"./utils/frame\"\nimport {poll} from \"./utils/poll\"\n\nexport async function execHttpPost(service, signable) {\n  signable.data = service.data\n  const resp = await fetchService(service, {\n    data: signable,\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const {close: closeFrame} = frame(resp.local, {\n      onClose() {\n        canContinue = false\n      },\n    })\n\n    return poll(resp.updates, () => canContinue)\n      .then(compositeSignature => {\n        closeFrame()\n        return normalizeCompositeSignature(compositeSignature)\n      })\n      .catch(error => {\n        console.error(error)\n        closeFrame()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\n\nconst STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n}\n\nexport async function execService(service, msg) {\n  try {\n    return STRATEGIES[service.method](service, msg)\n  } catch (error) {\n    console.error(\"execService(service, msg)\", error, {service, msg})\n    throw error\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeCompositeSignature} from \"../../normalize/composite-signature\"\n\nexport function execIframeRPC(service, signable) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    signable.data = service.data\n\n    frame(service, {\n      onReady(_, {send}) {\n        try {\n          // This is out of place, we need to find an alternative\n          send({\n            jsonrpc: \"2.0\",\n            id: id,\n            method: \"fcl:sign\",\n            params: [signable, service.params],\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(normalizeCompositeSignature(resp.data))\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n    })\n  })\n}\n","import \"../default-config\"\nimport {account} from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {frame} from \"./exec-service/strategies/utils/frame\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst coldStorage = {\n  get: async () => {\n    const fallback = JSON.parse(DATA)\n    const stored = JSON.parse(sessionStorage.getItem(NAME))\n    if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n      sessionStorage.removeItem(NAME)\n      return fallback\n    }\n    return stored || fallback\n  },\n  put: async data => {\n    sessionStorage.setItem(NAME, JSON.stringify(data))\n    return data\n  },\n}\n\nconst canColdStorage = () => {\n  return config().get(\"persistSession\", true)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) {\n      const user = await coldStorage.get()\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst identity = v => v\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await fcl.config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n\nasync function authenticate() {\n  return new Promise(async (resolve, reject) => {\n    spawnCurrentUser()\n    const user = await snapshot()\n    if (user.loggedIn && notExpired(user)) return resolve(user)\n\n    frame(\n      {\n        endpoint:\n          (await config().get(\"discovery.wallet\")) ||\n          (await config().get(\"challenge.handshake\")),\n      },\n      {\n        async onReady(e, {send, close}) {\n          send({\n            type: \"FCL:AUTHN:CONFIG\",\n            services: await configLens(/^service\\./),\n            app: await configLens(/^app\\.detail\\./),\n          })\n        },\n        async onClose() {\n          resolve(await snapshot())\n        },\n        async onResponse(e, {close}) {\n          send(NAME, SET_CURRENT_USER, await buildUser(e.data))\n          resolve(await snapshot())\n          close()\n        },\n      }\n    )\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService(az, signable)\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n  const user = await authenticate()\n  const authz = serviceOfType(user.services, \"authz\")\n\n  const preAuthz = serviceOfType(user.services, \"pre-authz\")\n  if (preAuthz) {\n    return {\n      ...account,\n      tempId: \"CURRENT_USER\",\n      async resolve(account, preSignable) {\n        return resolvePreAuthz(await execService(preAuthz, preSignable))\n      },\n    }\n  }\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    resolve: null,\n    addr: sansPrefix(authz.identity.address),\n    keyId: authz.identity.keyId,\n    sequenceNum: null,\n    signature: null,\n    async signingFunction(signable) {\n      return execService(authz, signable)\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nexport const currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    subscribe,\n    snapshot,\n  }\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","import \"./default-config\"\nimport \"./temp\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nexport const authenticate = () => currentUser().authenticate()\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = () => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate()\n}\nexport const signUp = () => currentUser().authenticate()\nexport const logIn = () => currentUser().authenticate()\n\nexport const authz = currentUser().authorization\n\nexport {config} from \"@onflow/config\"\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {latestBlock} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getLatestBlock} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getBlockById} from \"@onflow/sdk\"\nexport {getBlockByHeight} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\n\nexport const VERSION = \"0.0.68-alpha.13\"\n"],"names":["config","put","resolve","serialize","args","opts","get","defaultResolve","resolveFunction","JSON","stringify","Array","isArray","pipe","interaction","fetchTxStatus","transactionId","fclSend","getTransactionStatus","then","decode","isSealed","tx","status","isExecuted","isFinalized","HANDLERS","INIT","ctx","self","setTimeout","sendSelf","merge","SUBSCRIBE","letter","subscribe","from","send","UPDATED","all","UNSUBSCRIBE","unsubscribe","SNAPSHOT","reply","cur","next","broadcast","scoped","Error","spawnTransaction","spawn","transaction","callback","subscriber","once","predicate","suppress","Promise","reject","unsub","txStatus","statusCode","errorMessage","snapshot","snapshoter","onceFinalized","onceExecuted","onceSealed","isUnknown","isPending","isExpired","scheduleTick","hasSubs","hwm","latestBlock","_put4","_put2","getEvents","height","data","_put3","_put6","clearTimeout","spawnEvents","key","events","SERVICE_PRAGMA","f_type","f_vsn","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeFrame","service","old","type","endpoint","params","normalizeBackChannelRpc","method","serviceNormalizers","back-channel-rpc","pre-authz","uid","id","identity","address","withPrefix","addr","keyId","authz","authn","pid","provider","name","icon","frame","open-id","deriveCompositeId","rlp","toString","serviceOfType","services","find","serviceEndpoint","url","URL","searchParams","append","window","location","origin","Object","entries","fetchService","body","undefined","fetch","headers","Content-Type","d","json","normalizePollingResponse","resp","reason","compositeSignature","updates","authorizationUpdates","local","normalizeCompositeSignature","sansPrefix","signature","sig","FRAME","noop","IGNORE","Set","close","onClose","onMessage","onReady","onResponse","addEventListener","internal","src","invariant","document","getElementById","$frame","createElement","allow","frameBorder","style","cssText","remove","renderFrame","unmount","e","has","error","console","removeEventListener","msg","contentWindow","postMessage","parse","OPTIONS","HTTP/GET","HTTP/POST","serviceMethod","execHttpPost","signable","canContinue","closeFrame","poll","r","execService","STRATEGIES","HTTP/RPC","IFRAME/RPC","_","jsonrpc","result","pact","state","value","s","o","_settle","bind","v","observer","authorization","account","spawnCurrentUser","authenticate","user","preAuthz","tempId","preSignable","resolvePreAuthz","sequenceNum","signingFunction","_Pact","prototype","onFulfilled","onRejected","this","_this","_isSettledPact","thenable","loggedIn","notExpired","configLens","app","paddr","normalizeData","servicesURL","code","authorizations","push","fetchServices","hks","sx1","sx2","map","normalizeService","findService","cid","expiresAt","exp","buildUser","NAME","SET_CURRENT_USER","regex","fcl","where","fromEntries","replace","DATA","coldStorage","sessionStorage","setItem","canColdStorage","fallback","stored","getItem","removeItem","Date","now","unauthenticate","proposer","payer","normalizePreAuthzResponse","axs","role","az","join","authorizer","test","update","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","updateValue","receive","tag","_exit2","expectReply","timeout","currentUser","reauthenticate","signUp","logIn","VERSION"],"mappings":"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"}