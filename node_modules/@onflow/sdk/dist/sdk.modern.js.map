{"version":3,"file":"sdk.modern.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/send/unary.js","../src/send/send-transaction.js","../src/send/send-get-transaction.js","../src/send/send-execute-script.js","../src/send/send-get-account.js","../src/send/send-get-events.js","../src/send/send-get-block.js","../src/send/send-get-latest-block.js","../src/send/send-get-block-by-id.js","../src/send/send-get-block-by-height.js","../src/send/sdk-send.js","../src/send/send-get-transaction-status.js","../src/send/send-ping.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-ref-block-id.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/resolve/resolve-accounts.js","../src/encode/encode.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-validators.js","../src/resolve/resolve.js","../src/resolve/resolve-final-normalization.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/latest-block/latest-block.js","../src/account/account.js","../src/build/build-authorizations.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-latest-block.js","../src/build/build-get-block-by-id.js","../src/build/build-get-block-by-height.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-limit.js","../src/build/build-params.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-invariant.js","../src/resolve/resolve-params.js"],"sourcesContent":["export const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const GET_LATEST_BLOCK /*              */ = \"GET_LATEST_BLOCK\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK_BY_ID /*               */ = \"GET_BLOCK_BY_ID\"\nexport const GET_BLOCK_BY_HEIGHT /*           */ = \"GET_BLOCK_BY_HEIGHT\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /* */ = \"ACCOUNT\"\nexport const PARAM /*   */ = \"PARAM\"\nexport const ARGUMENT /**/ = \"ARGUMENT\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isNumber = (d) => typeof d === \"number\"\nconst isFn = (d) => typeof d === \"function\"\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\n\nexport const isInteraction = (ix) => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = (ix) => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = (wat) => (ix) => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst makeAccount = (acct, tempId) => (ix) => {\n  ix.accounts[tempId] = JSON.parse(ACCT)\n  ix.accounts[tempId].tempId = tempId\n  ix.accounts[tempId].addr = acct.addr\n  ix.accounts[tempId].keyId = acct.keyId\n  ix.accounts[tempId].sequenceNum = acct.sequenceNum\n  ix.accounts[tempId].signature = acct.signature\n  ix.accounts[tempId].signingFunction = acct.signingFunction\n  ix.accounts[tempId].resolve = acct.resolve\n  ix.accounts[tempId].role = {\n    ...ix.accounts[tempId].role,\n    ...acct.role,\n  }\n  return Ok(ix)\n}\n\nexport const makeAuthorizer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.authorizations.push(tempId)\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makeProposer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.proposer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makePayer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.payer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n} \n\nexport const makeParam = (param) => (ix) => {\n  let tempId = uuid()\n  ix.message.params.push(tempId)\n\n  ix.params[tempId] = JSON.parse(PRM)\n  ix.params[tempId].tempId = tempId\n  ix.params[tempId].key = param.key\n  ix.params[tempId].value = param.value\n  ix.params[tempId].asParam = param.asParam\n  ix.params[tempId].xform = param.xform\n  ix.params[tempId].resolve = param.resolve\n  return Ok(ix)\n}\n\nexport const makeArgument = (arg) => (ix) => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*          */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*            */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*        */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\n\nconst is = (wat) => (ix) => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*          */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*            */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*        */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\n\nexport const isOk /*  */ = (ix) => ix.status === OK\nexport const isBad /* */ = (ix) => ix.status === BAD\nexport const why /*   */ = (ix) => ix.reason\n\nexport const isAccount /*  */ = (account) => account.kind === ACCOUNT\nexport const isParam /*    */ = (param) => param.kind === PARAM\nexport const isArgument /* */ = (argument) => argument.kind === ARGUMENT\n\nconst hardMode = (ix) => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return (d) => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = (v) => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => (ix) => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => (ix) => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = (key) => (ix) => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE =\n'{\"tag\": 0, \"transaction\":null, \"transactionId\":null, \"encodedData\":null, \"events\": null, \"account\": null}'\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransaction, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const unwrapKey = key => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    sequenceNumber: key.getSequenceNumber()\n  })\n\n  const unwrapSignature = sig => ({\n    address: u8ToHex(sig.getAddress_asU8()),\n    keyId: sig.getKeyId(),\n    signature: u8ToHex(sig.getSignature_asU8())\n  })\n\n  let transaction = res.getTransaction()\n  ret.transaction = {\n      script: Buffer.from(transaction.getScript_asU8()).toString(\"utf8\"),\n      args: (transaction.getArgumentsList()).map(arg => JSON.parse(Buffer.from(arg).toString(\"utf8\"))),\n      referenceBlockId: u8ToHex(transaction.getReferenceBlockId_asU8()),\n      gasLimit: transaction.getGasLimit(),\n      proposalKey: unwrapKey(transaction.getProposalKey()),\n      payer: u8ToHex(transaction.getPayer_asU8()),\n      authorizers: (transaction.getAuthorizersList()).map(u8ToHex),\n      payloadSignatures: (transaction.getPayloadSignaturesList()).map(unwrapSignature),\n      envelopeSignatures: (transaction.getEnvelopeSignaturesList()).map(unwrapSignature)\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new ExecuteScriptAtBlockIDRequest()\n    \n    req.setBlockId(hexBuffer(ix.block.id))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockID, req)\n  } else if (ix.block.height) {\n    req = new ExecuteScriptAtBlockHeightRequest()\n\n    req.setBlockHeight(Number(ix.block.height))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockHeight, req)\n  } else {\n    req = new ExecuteScriptAtLatestBlockRequest()\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetAccountAtLatestBlockRequest, GetAccountAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  ix = await ix\n\n  const req = ix.block.height ? new GetAccountAtBlockHeightRequest() : new GetAccountAtLatestBlockRequest()\n  if (ix.block.height) req.setHeight(Number(ix.block.height))\n  req.setAddress(addressBuffer(sansPrefix(ix.account.addr)))\n\n  const res = await unary(opts.node, ix.block.height ? AccessAPI.GetAccountAtBlockHeight : AccessAPI.GetAccountAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: new TextDecoder(\"utf-8\").decode(contract[1] || new UInt8Array())\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: new TextDecoder(\"utf-8\").decode(account.getCode_asU8() || new UInt8Array()),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, GetEventsForBlockIDsRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  ix = await ix\n \n  let res\n  const req = ix.events.start ? new GetEventsForHeightRangeRequest() : new GetEventsForBlockIDsRequest()\n  req.setType(ix.events.eventType)\n  \n  if (ix.events.start) {\n    req.setStartHeight(Number(ix.events.start))\n    req.setEndHeight(Number(ix.events.end))\n\n    res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n  } else {\n    ix.events.blockIds.forEach(id =>\n      req.addBlockIds(hexBuffer(id))\n    )\n\n    res = await unary(opts.node, AccessAPI.GetEventsForBlockIDs, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = u8ToHex(result.getBlockId_asU8())\n    const blockHeight = result.getBlockHeight()\n    const blockTimestamp = result.getBlockTimestamp().toDate().toISOString()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        blockTimestamp,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {GetBlockByIDRequest, GetBlockByHeightRequest, GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlock(ix, opts = {}) {\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n\n    res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n  } else {\n    req = new GetLatestBlockRequest()\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n  }\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(Number(ix.block.height))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {\n    isTransaction,\n    isGetTransaction,\n    isGetTransactionStatus,\n    isScript,\n    isGetAccount,\n    isGetEvents,\n    isGetBlock,\n    isGetLatestBlock,\n    isGetBlockById,\n    isGetBlockByHeight,\n    isPing,\n} from \"../interaction/interaction.js\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block.js\"\nimport {sendGetBlockById} from \"./send-get-block-by-id.js\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {config} from \"@onflow/config\"\n\nexport const send = async (ix, opts = {}) => {\n    opts.node = opts.node || (await config().get(\"accessNode.api\"))\n    ix = await ix\n\n    switch (true) {\n        case isTransaction(ix):\n            return sendTransaction(ix, opts)\n        case isGetTransactionStatus(ix):\n            return sendGetTransactionStatus(ix, opts)\n        case isGetTransaction(ix):\n            return sendGetTransaction(ix, opts)\n        case isScript(ix):\n            return sendExecuteScript(ix, opts)\n        case isGetAccount(ix):\n            return sendGetAccount(ix, opts)\n        case isGetEvents(ix):\n            return sendGetEvents(ix, opts)\n        case isGetLatestBlock(ix):\n            return sendGetLatestBlock(ix, opts)\n        case isGetBlock(ix):\n            return sendGetBlock(ix, opts)\n        case isGetBlockById(ix):\n            return sendGetBlockById(ix, opts)\n        case isGetBlockByHeight(ix):\n            return sendGetBlockByHeight(ix, opts)\n        case isPing(ix):\n            return sendPing(ix, opts)\n        default:\n            return ix\n    }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    }\n  ])\n}\n","const latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async (i) => i\n\nconst decodeVoid = async () => null\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async (v) => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      (v) =>\n        new Promise(async (res) =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[\n      await recurseDecode(v.key, decoders, [...stack, v.key])\n    ] = await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeNumber,\n  Int: decodeNumber,\n  UInt8: decodeNumber,\n  Int8: decodeNumber,\n  UInt16: decodeNumber,\n  Int16: decodeNumber,\n  UInt32: decodeNumber,\n  Int32: decodeNumber,\n  UInt64: decodeNumber,\n  Int64: decodeNumber,\n  UInt128: decodeNumber,\n  Int128: decodeNumber,\n  UInt256: decodeNumber,\n  Int256: decodeNumber,\n  Word8: decodeNumber,\n  Word16: decodeNumber,\n  Word32: decodeNumber,\n  Word64: decodeNumber,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find((decoder) => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n  return await recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n\n  if (response.encodedData) {\n    return await decode(response.encodedData, decoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, decoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, decoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  }\n\n  return null\n}\n","import {isTransaction, Ok, interaction, pipe} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\n\nasync function getRefId (opts) {\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await send(ix, opts)\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.0\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import { encode } from '@onflow/rlp';\n\nexport const encodeTransactionPayload = tx => rlpEncode(preparePayload(tx))\nexport const encodeTransactionEnvelope = tx => rlpEncode(prepareEnvelope(tx))\n\nconst paddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => paddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.script),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.gasLimit,\n    addressBuffer(tx.proposalKey.address),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(tx.payer),\n    tx.authorizers.map(addressBuffer),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  envelopeFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"script\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"gasLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst envelopeFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nfunction buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.0\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    script: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    gasLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import { get, pipe, Ok, Bad } from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, 'ix.validators', [])\n  return pipe(ix, validators.map(cb => ix => cb(ix, { Ok, Bad })))\n}   \n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nimport {send} from \"../send/sdk-send.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\n\nexport const resolve = pipe([\n    resolveCadence,\n    resolveArguments,\n    resolveAccounts,\n    /* special */ execFetchRef,\n    /* special */ execFetchSequenceNumber,\n    resolveSignatures,\n    resolveFinalNormalization,\n    resolveValidators,\n])\n\nasync function execFetchRef(ix) {\n    if (isTransaction(ix) && ix.message.refBlock == null) {\n        ix.message.refBlock = (await send(build([getBlock()])).then(decode)).id\n    }\n    return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\nif (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n    ix.accounts[acct.tempId].sequenceNum = await send(await build([getAccount(acct.addr)])).then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n}\nreturn ix\n}\n  ","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\nimport {send as defaultSend} from \"./sdk-send.js\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFunction = await config().get(\"sdk.send\", opts.send || defaultSend)\n  const resolveFunction = await config().get(\n    \"sdk.resolve\",\n    opts.resolve || defaultResolve\n  )\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFunction(await resolveFunction(args), opts)\n}\n\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nexport function latestBlock(...args) {\n  let opts = args[1] || (typeof args[0] === \"object\" ? args[0] : undefined)\n  let isSealed = typeof args[0] === \"boolean\" ? args[0] : undefined\n\n  if (typeof args[0] === \"object\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n\n  return send([getBlock(isSealed)], opts).then(decode)\n}\n","import {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, opts) {\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {pipe, makeAuthorizer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  authorizer: true,\n}\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map((authz) => {\n      return typeof authz === \"function\"\n        ? makeAuthorizer({resolve: authz, role: roles, roles})\n        : makeAuthorizer({...authz, role: roles, roles})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n    return update('ix.validators', validators => \n        Array.isArray(validators) ? validators.push(cb) : [cb]\n    )\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block height and isSealed.\")\n      if (ix.block.id) return Bad(ix, \"Unable to specify both block height and block id.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\")\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEvents(eventType, start, end) {\n\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )  \n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(eventType, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"../interaction/interaction.js\"\n\nexport function getLatestBlock(isSealed = false) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockById} from \"../interaction/interaction.js\"\n\nexport function getBlockById(id) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockById,\n    ix => {\n      ix.block.ids = [id]\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockByHeight} from \"../interaction/interaction.js\"\n\nexport function getBlockByHeight(height) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockByHeight,\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function limit(computeLimit) {\n  return pipe([\n    ix => {\n      ix.message.computeLimit = computeLimit\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeParam} from \"../interaction/interaction.js\"\n\nexport function params(px = []) {\n  return pipe(px.map(makeParam))\n}\n\nexport function param(value, xform = null, key = null) {\n  return {key, value, xform: null}\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {pipe, makeProposer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  proposer: true,\n}\n\nexport async function proposer(authz) {\n  return typeof authz === \"function\"\n    ? makeProposer({resolve: authz, role: roles, roles})\n    : makeProposer({...authz, role: roles, roles})\n}\n","import {pipe, makePayer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  payer: true\n}\n\nexport function payer(authz) {\n  return typeof authz === \"function\"\n    ? makePayer({resolve: authz, role: roles, roles})\n    : makePayer({...authz, role: roles, roles})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([\n    makeScript,\n    put(\"ix.cadence\", template(...args))\n  ])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.computeLimit = ix.message.computeLimit || DEFAULT_COMPUTE_LIMIT\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import { Ok, Bad } from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, { Ok, Bad }) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {resolveCadence} from \"./resolve-cadence.js\"\n\nexport function resolveParams (ix) {\n  console.error(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n\n      The resolver sdk.resolveParams is being replaced with the package @onflow/sdk-resolve-cadence\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0002-deprecate-resolve-params-resolver\n\n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n\n  return resolveCadence(ix)\n}\n"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","interaction","isNull","d","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","Ok","ix","status","Bad","reason","makeIx","wat","tag","makeAccount","acct","tempId","accounts","addr","keyId","sequenceNum","signature","signingFunction","resolve","role","makeParam","param","message","params","push","key","value","asParam","xform","makeArgument","arg","arguments","asArgument","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","makeGetBlock","makeGetBlockHeader","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isGetBlock","isGetBlockHeader","isOk","isBad","why","recPipe","async","fns","has","Error","hardMode","hd","rest","cur","isNumber","hasOwnProperty","isInteraction","e","pipe","args","arg1","arg2","isArray","identity","v","get","fallback","assigns","put","update","fn","destroy","build","response","unary","host","method","request","Promise","reject","grpc","onEnd","statusMessage","Code","OK","setDefaultTransport","NodeHttpTransport","hexBuffer","hex","Buffer","addressBuffer","padStart","pad","u8ToHex","u8","toString","argumentBuffer","stringify","send","opts","node","config","tx","Transaction","setScript","script","scriptBuffer","cadence","setGasLimit","computeLimit","setReferenceBlockId","refBlock","setPayer","sansPrefix","payer","forEach","addArguments","authorizations","map","reduce","prev","current","find","item","addAuthorizers","proposalKey","ProposalKey","setAddress","proposer","setKeyId","setSequenceNumber","setProposalKey","values","sig","Signature","setSignature","addPayloadSignatures","error","console","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","res","AccessAPI","SendTransaction","t2","ret","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","sendTransaction","GetTransactionRequest","setId","transaction","id","GetTransactionResult","events","getEventsList","transactionStatus","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","event","type","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","payload","getPayload_asU8","sendGetTransactionStatus","GetTransaction","unwrapSignature","address","getAddress_asU8","getKeyId","getSignature_asU8","getTransaction","getScript_asU8","getArgumentsList","referenceBlockId","getReferenceBlockId_asU8","gasLimit","getGasLimit","getProposalKey","sequenceNumber","getSequenceNumber","getPayer_asU8","authorizers","getAuthorizersList","payloadSignatures","getPayloadSignaturesList","envelopeSignatures","getEnvelopeSignaturesList","sendGetTransaction","block","ExecuteScriptAtBlockIDRequest","setBlockId","code","ExecuteScriptAtBlockID","height","ExecuteScriptAtBlockHeightRequest","setBlockHeight","Number","ExecuteScriptAtBlockHeight","ExecuteScriptAtLatestBlockRequest","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","sendExecuteScript","GetAccountAtBlockHeightRequest","GetAccountAtLatestBlockRequest","setHeight","account","GetAccountAtBlockHeight","GetAccountAtLatestBlock","getAccount","contractsMap","contracts","getContractsMap","getEntryList","acc","contract","[object Object]","TextDecoder","decode","UInt8Array","withPrefix","balance","getBalance","getCode_asU8","getKeysList","publicKey","index","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","revoked","getRevoked","sendGetAccount","start","GetEventsForHeightRangeRequest","GetEventsForBlockIDsRequest","setType","eventType","setStartHeight","setEndHeight","end","GetEventsForHeightRange","blockIds","addBlockIds","GetEventsForBlockIDs","results","getResultsList","blocks","result","blockId","getBlockId_asU8","blockHeight","getBlockHeight","blockTimestamp","getBlockTimestamp","toDate","toISOString","sendGetEvents","GetLatestBlockRequest","latestBlock","isSealed","setIsSealed","replace","trim","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","parentId","getParentId_asU8","getHeight","timestamp","getTimestamp","collectionGuarantee","collectionId","getCollectionId_asU8","blockSeal","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","sendGetLatestBlock","GetBlockByIDRequest","GetBlockByID","GetBlockByHeightRequest","GetBlockByHeight","sendGetBlock","sendGetBlockById","sendGetBlockByHeight","PingRequest","Ping","sendPing","decodeNumber","num","_","stack","decodeImplicit","i","decodeComposite","composite","decoders","decoded","fields","name","recurseDecode","decoder","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","optional","Reference","array","all","Dictionary","dictionary","Event","Resource","Struct","lookup","found","test","RegExp","substring","decodeInstructions","customDecoders","decodeResponse","data","blockHeader","resolveRefBlockId","getRefId","isFn","isString","resolveCadence","invariant","where","then","entries","cast","resolveArguments","buildPreSignable","f_type","f_vsn","roles","collectAccounts","last","depth","ax","old","authorizer","curr","resolveAccounts","paddedHexBuffer","argumentToString","rlpEncode","encode","preparePayload","validatePayload","preparePayloadSignatures","signers","collectSigners","payloadSigs","signerIndex","sort","a","b","Map","addSigner","set","payloadFields","field","checkField","proposalKeyFields","isObject","check","defaultVal","envelopeFields","payloadSigFields","obj","base","missingFieldError","invalidFieldError","printFieldName","resolveSignatures","insideSigners","inside","add","delete","findInsideSigners","insidePayload","prepForEncoding","fetchSignature","outsideSigners","outside","findOutsideSigners","outsidePayload","validateEnvelope","prepareEnvelope","encodeOutsideMessage","buildSignable","cid","resolveValidators","validators","cb","sendFunction","defaultSend","resolveFunction","defaultResolve","decodersFromConfig","pattern","fromEntries","undefined","warn","authz","authorization","validator","atBlockHeight","atBlockId","getEvents","getEventsAtBlockHeightRange","getEventsAtBlockIds","getBlockHeader","getLatestBlock","getBlockById","ids","getBlockByHeight","getTransactionStatus","limit","px","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","predicate","resolveParams"],"mappings":"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"}